#############################################################################
# Makefile for building snake
# Generated by tmake at 10:55, 2012/05/20
#     Project: snake
#    Template: app
#############################################################################

####### Compiler, tools and options

CC	=	$(CROSS_COMPILE)gcc
CXX	=	$(CROSS_COMPILE)g++
CFLAGS	=	-pipe -Wall -W -O3 -DNO_DEBUG
CXXFLAGS=	-pipe -DQWS -fno-exceptions -fno-rtti -Wall -W -O3 -DNO_DEBUG
INCPATH	=	-I$(QTDIR)/include -I$(QTDIR)/extern3rd/include
LINK	=	$(CROSS_COMPILE)gcc
LFLAGS	=	-Wl,-rpath $(QTDIR)/lib -Wl,-rpath $(QTDIR)/target/lib
LIBS	=	$(SUBLIBS) -L$(QTDIR)/lib -L$(QTDIR)/extern3rd/lib -lm -lqte-mt -lezxappbase -lezxam $(LIBLINK)
MOC	=	$(QTDIR)/bin/moc
UIC	=	$(QTDIR)/bin/uic

TAR	=	tar -cf
GZIP	=	gzip -9f

####### Files

HEADERS =	snake.h \
		snakeWidget.h
SOURCES =	main.cpp \
		snake.cpp \
		snakeWidget.cpp
OBJECTS =	main.o \
		snake.o \
		snakeWidget.o
INTERFACES =	
UICDECLS =	
UICIMPLS =	
SRCMOC	=	moc_snakeWidget.cpp
OBJMOC	=	moc_snakeWidget.o
DIST	=	
TARGET	=	snake.lin
INTERFACE_DECL_PATH = .

####### Implicit rules

.SUFFIXES: .cpp .cxx .cc .C .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules


all: $(TARGET)

$(TARGET): $(UICDECLS) $(OBJECTS) $(OBJMOC) 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS)
	sudo cp $(TARGET) $(TFCARD)/qttest
install:
	sudo cp $(TARGET) $(TFCARD)/qttest

moc: $(SRCMOC)

tmake: Makefile

Makefile: snake.pro
	tmake snake.pro -o Makefile

dist:
	$(TAR) snake.tar snake.pro $(SOURCES) $(HEADERS) $(INTERFACES) $(DIST)
	$(GZIP) snake.tar

clean:
	-rm -f $(OBJECTS) $(OBJMOC) $(SRCMOC) $(UICIMPLS) $(UICDECLS) $(TARGET)
	-rm -f *~ core

####### Sub-libraries


###### Combined headers


####### Compile

main.o: main.cpp

snake.o: snake.cpp \
		snake.h

snakeWidget.o: snakeWidget.cpp \
		snakeWidget.h \
		snake.h

moc_snakeWidget.o: moc_snakeWidget.cpp \
		snakeWidget.h \
		snake.h

moc_snakeWidget.cpp: snakeWidget.h
	$(MOC) snakeWidget.h -o moc_snakeWidget.cpp

